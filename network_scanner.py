#!/usr/bin/env python

import scapy.all as scapy
import optparse


def get_arguments():
    parser=optparse.OptionParser()
    parser.add_option("-r", "--range", dest="ip", help="Ip address range to scan")
    (options, arguments) = parser.parse_args()
    print(options)
    return options


def scan(ip):
    # creates an ARP packet
    arp_request = scapy.ARP(pdst=ip)
    # print(arp_request.summary())

    # creates an ethernet packet
    broadcast = scapy.Ether(dst="ff:ff:ff:ff:ff:ff")

    # combine ARP and ethernet packet
    arp_request_broadcast = broadcast/arp_request

    # get more information
    # arp_request_broadcast.show()
    # field that we can set: scapy.ls(scapy.ARP())
    answered_list = scapy.srp(arp_request_broadcast, timeout=1)[0]  # send,recieves and return unanswered and answered packets
    # print(answered_list.summary())
    clients_list = []
    for element in answered_list:
        client_dict = {"ip": element[1].psrc, "mac": element[1].hwsrc}
        clients_list.append(client_dict)
    return clients_list


def print_result(results_list):
    print("IP\t\t\tMAC Address\n------------------------------------------------------")
    for client in results_list:
        print(client["ip"] + "\t\t" + client["mac"])


scan_result=scan(get_arguments().ip)
print_result(scan_result)
